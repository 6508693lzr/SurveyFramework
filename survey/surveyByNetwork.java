/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package survey;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.SpringLayout;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
/**
 *
 * @author httle
 */
public final class surveyByNetwork extends javax.swing.JFrame{
    MyModel SurveyModel  ;
     ArrayList<Object[]> dataValues;
    /**
     * Creates new form surveyForm
     */
    public surveyByNetwork() {
        String dataPath="DownloadAttachment.txt";
        setLocation(300,100);
        surveyDataIn(dataPath);
        SurveyTable();
        initComponents();
        adjustTable();
    }
    private void adjustTable(){
        SurveyTable.getColumnModel().getColumn(0).setPreferredWidth(25);
        SurveyTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        SurveyTable.getColumnModel().getColumn(2).setPreferredWidth(250);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        SurveyTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        DetailTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnQn = new javax.swing.JButton();
        btnTopic = new javax.swing.JButton();
        btnAns = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 51));

        SurveyTable.setModel(SurveyModel);
        SurveyTable.setColumnSelectionAllowed(true);
        SurveyTable.setEditingColumn(1);
        SurveyTable.setEditingRow(1);
        SurveyTable.setFillsViewportHeight(true);
        SurveyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SurveyTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SurveyTable);
        SurveyTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        DetailTable.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DetailTable.setForeground(new java.awt.Color(51, 51, 51));
        DetailTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DetailTable.setGridColor(new java.awt.Color(0, 0, 0));
        DetailTable.setSelectionBackground(new java.awt.Color(0, 153, 255));
        jScrollPane2.setViewportView(DetailTable);

        jLabel1.setText("SortBy: ");

        btnQn.setText("Qn#");
        btnQn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQnActionPerformed(evt);
            }
        });

        btnTopic.setText("Topic");
        btnTopic.setToolTipText("");
        btnTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopicActionPerformed(evt);
            }
        });

        btnAns.setText("Answer");
        btnAns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnsActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(51, 153, 255));
        jLabel3.setText("Linked List");
        jLabel3.setOpaque(true);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jButton6.setText("Display");

        jLabel4.setText("Binary Tree:");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Pre-Order");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("In-Order");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Post-Order");

        jButton7.setText("Display");

        jButton8.setText("Save");
        jButton8.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jButton8StateChanged(evt);
            }
        });

        jButton9.setText("Display");

        jButton10.setText("Save");

        jButton11.setText("Display");

        jButton12.setText("Save");

        jLabel8.setBackground(new java.awt.Color(102, 153, 255));
        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Survey By Network");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel8.setOpaque(true);

        btnSend.setText("Send");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane4)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(45, 45, 45))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(btnQn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAns, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSend, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btnQn)
                            .addComponent(btnTopic)
                            .addComponent(btnAns))
                        .addGap(18, 18, 18)
                        .addComponent(btnExit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton11)
                    .addComponent(jButton12)
                    .addComponent(jButton9)
                    .addComponent(jButton10)))
        );

        btnQn.getAccessibleContext().setAccessibleName("Qn");
        btnQn.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void displayTable(TableModel model){
        for(int i=0;i<model.getRowCount();i++){
            System.out.println(model.getValueAt(i, 0));
        }
    }
    void displayData(ArrayList<Object[]> arr){
        System.out.println("begin data displaying "+ arr.size());
        for(int i=0;i<arr.size();i++){
            System.out.println(arr.get(i)[0]);
        }        
    }
    private void jButton8StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jButton8StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8StateChanged

    private void btnQnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQnActionPerformed

      SurveyMethods.OriginSort(0,1,dataViewDetail);
      SurveyModel=new MyModel(dataViewDetail, header);    
      SurveyTable.setModel(SurveyModel);     
      adjustTable();
    }//GEN-LAST:event_btnQnActionPerformed

    private void btnTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopicActionPerformed
        // TODO add your handling code here:
        SurveyMethods.bubbleSort(dataViewDetail);
        SurveyModel=new MyModel(dataViewDetail,header);
        SurveyTable.setModel(SurveyModel);
        adjustTable();
    }//GEN-LAST:event_btnTopicActionPerformed

    private void btnAnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnsActionPerformed
        // TODO add your handling code here:
        SurveyMethods.selectionSort(dataViewDetail);
        SurveyTable.setModel(new MyModel(dataViewDetail,header));
        adjustTable();
    }//GEN-LAST:event_btnAnsActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
            // TODO add your handling code here:
            System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    
    private void SurveyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SurveyTableMouseClicked
       String[] listing=(String[])dataValues.get(SurveyTable.getSelectedRow());
       DefaultTableModel tableModel  = (DefaultTableModel)DetailTable.getModel();
       tableModel.setRowCount(7);tableModel.setColumnCount(2);
       DetailTable.getColumnModel().getColumn(1).setPreferredWidth(280);   
        tableModel.setValueAt("Topic", 0, 0);
        tableModel.setValueAt("Qn: "+listing[0], 1, 0);
        tableModel.setValueAt("A:", 2, 0);
        tableModel.setValueAt("B:", 3, 0);
        tableModel.setValueAt("C:", 4, 0);
        tableModel.setValueAt("D:", 5, 0);
        tableModel.setValueAt("E:", 6, 0);
        for(int i=0;i<7;i++)
            tableModel.setValueAt(listing[i+1], i, 1);
      DetailTable.setModel(tableModel);
      DetailTable.setDefaultRenderer(Object.class,new MyRenderer());
      updateRowHeights();
      DetailTable.setRowHeight(1, (int) (DetailTable.getRowHeight(1)*2.2)); 
      DetailTable.setEnabled(false);      
    }//GEN-LAST:event_SurveyTableMouseClicked
       public class MyRenderer extends JTextArea implements TableCellRenderer{
        public MyRenderer() {
            setOpaque(true);
            setLineWrap(true);
            setWrapStyleWord(true);
        }
        @Override
        public Component getTableCellRendererComponent(JTable table,Object value,
            boolean isSelected, boolean hasFocus, int row,int column) { 
            this.setText(value == null ? "" : value.toString());
            setEditable(false);
            return this;
        }
    }
    private void updateRowHeights()
{
    for (int row = 0; row < DetailTable.getRowCount(); row++){
        int rowHeight = DetailTable.getRowHeight();
        for (int column = 0; column < DetailTable.getColumnCount(); column++)
        {
            Component comp = DetailTable.prepareRenderer(DetailTable.getCellRenderer(row, column), row, column);
            rowHeight = Math.max(rowHeight, comp.getPreferredSize().height);
        }
        DetailTable.setRowHeight(row, rowHeight);}
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(surveyByNetwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(surveyByNetwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(surveyByNetwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(surveyByNetwork.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new surveyByNetwork().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DetailTable;
    private javax.swing.JTable SurveyTable;
    private javax.swing.JButton btnAns;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnQn;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnTopic;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

//---------------------------------------------------------------------------------------------------
    // Sources: http://www.cs.cf.ac.uk/Dave/HCI/HCI_Handout_CALLER/node167.html
    //     and: http://www.cs.cf.ac.uk/Dave/HCI/HCI_Handout_CALLER/node168.html
    //---------------------------------------------------------------------------------------------------
    String[] headerRow;
   
    private void surveyDataIn(String datapath)
    {
        try (BufferedReader br = new BufferedReader(new FileReader(datapath))) {
            int rowCount=0;
            String aline;
            dataValues = new ArrayList<>();
            String[] rowRecord=new String[8];//header names as 8 attribute for each entity stored in the data file, so 8 element
            //allocated survey data content from external file to data array and arraylist
            for(int i=0;i<8;i++){                 
                if((aline=br.readLine())!=null)
                    rowRecord[i]=aline;
                else
                    break;
                //every 7 line text copied to the data structure
                if(i==7){
                    if(rowCount==0)
                        headerRow=Arrays.copyOf(rowRecord, rowRecord.length); 
                    else      
                   dataValues.add(rowRecord);                      
                   i=-1;rowCount++; 
                   rowRecord=new String[8];
                }
            }
            br.close();
        } //counter for the lines' data
        catch (IOException e)
        {
            System.out.println("get Exception");
            System.err.println("Error: " + e.getMessage());            
        }
    }
    public ArrayList<Object[]> dataViewDetail=new ArrayList();      
    String header[]=new String[3];    
    public void SurveyTable()
    { 
    // Create some data
    int rowcounter=0;
        header[0]=headerRow[0];
        header[1]=headerRow[1];
        header[2]=headerRow[2];    
    for (Object[] dataLine : dataValues) {
        String[] ThreeData=new String[3];
        ThreeData[0]=(String)dataLine[0];
        ThreeData[1]=(String)dataLine[1];
        ThreeData[2]=(String)dataLine[2];
        dataViewDetail.add(ThreeData);
        rowcounter++;
        }
        // constructor of JTable model    
	SurveyModel = new MyModel(dataViewDetail, header);
        
    }
    //---------------------------------------------------------------------------------------------------
    // Source: http://www.dreamincode.net/forums/topic/231112-from-basic-jtable-to-a-jtable-with-a-tablemodel/
    // class that extends the AbstractTableModel
    //---------------------------------------------------------------------------------------------------

   class MyModel extends AbstractTableModel
    {
        ArrayList<Object[]> al;
        public boolean[][] editableCells;
        // the headers
        String[] header;
        
        // to hold the column index for the Sent column
        int col;

        // constructor 
        MyModel(ArrayList<Object[]> obj, String[] header)
        {
            // save the header
            this.header = header;
            // and the data
            al = obj;
            // get the column index for the Sent column
            col = this.findColumn("");
        }
        private MyModel(int rows, int cols){
            super();
            this.editableCells=new boolean[rows][cols];
        }
        // method that needs to be overload. The row count is the size of the ArrayList
       public void setCellEditable(int row,int column,boolean value){
            this.editableCells[row][column]=value;
            this.fireTableCellUpdated(row, column);
        }       
        @Override
        public int getRowCount()
        {
            return al.size();
        }

        // method that needs to be overload. The column count is the size of our header
        @Override
        public int getColumnCount()
        {
            return header.length;
        }

        // method that needs to be overload. The object is in the arrayList at rowIndex
        @Override
        public Object getValueAt(int rowIndex, int columnIndex)
        {
            return al.get(rowIndex)[columnIndex];
        }

        // a method to return the column name 
        @Override
        public String getColumnName(int index)
        {
            return header[index];
        }
        
        @Override
        public Class getColumnClass(int columnIndex) 
        {
            if (columnIndex == col) 
            {
                return Boolean.class; // For every cell in column 7, set its class to Boolean.class
            }
            return super.getColumnClass(columnIndex); // Otherwise, set it to the default class
	}

        // a method to add a new line to the table
        void add(String word1, String word2, boolean sent)
        {
            // make it an array[3] as this is the way it is stored in the ArrayList
            // (not best design but we want simplicity)
            Object[] item = new Object[3];
            item[0] = word1;
            item[1] = word2;
            item[2] = sent;
            al.add(item);
            // inform the GUI that I have change
            fireTableDataChanged();
        }
    }

    
}
